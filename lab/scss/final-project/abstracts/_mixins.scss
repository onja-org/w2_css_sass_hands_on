// Mixins - Reusable chunks of CSS that accept parameters
// üîß Your toolkit for consistent, maintainable styles

@use "sass:color";

// ==========================================
// RESPONSIVE MIXINS
// ==========================================

// Mobile-first responsive breakpoints
@mixin sm {
    @media (min-width: $screen-sm) {
        @content;
    }
}

@mixin md {
    @media (min-width: $screen-md) {
        @content;
    }
}

@mixin lg {
    @media (min-width: $screen-lg) {
        @content;
    }
}

@mixin xl {
    @media (min-width: $screen-xl) {
        @content;
    }
}

// Usage: @include md { font-size: 2rem; }

// ==========================================
// LAYOUT MIXINS
// ==========================================

// Container with max-width and centering
@mixin container($max-width: $container-xl) {
    width: 100%;
    max-width: $max-width;
    margin: 0 auto;
    padding: 0 $spacing-4;

    @include md {
        padding: 0 $spacing-6;
    }
}

// Flexbox utilities
@mixin flex-center($direction: row) {
    display: flex;
    flex-direction: $direction;
    align-items: center;
    justify-content: center;
}

@mixin flex-between {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

@mixin flex-column {
    display: flex;
    flex-direction: column;
}

// Grid utilities
@mixin grid($columns: auto-fit, $min-size: 250px) {
    display: grid;
    grid-template-columns: repeat($columns, minmax($min-size, 1fr));
    gap: $spacing-6;
}

// ==========================================
// COMPONENT MIXINS
// ==========================================

// Button base styles
@mixin btn-base {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: none;
    border-radius: $rounded-md;
    font-weight: $font-medium;
    text-decoration: none;
    text-align: center;
    cursor: pointer;
    transition: $transition-all;
    position: relative;

    &:focus {
        outline: none;
        box-shadow: 0 0 0 3px rgba($primary, 0.2);
    }

    &:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }
}

// Button variants
@mixin btn-variant($bg-color, $text-color: $white, $hover-bg: null) {
    @include btn-base;
    background-color: $bg-color;
    color: $text-color;

    $hover-color: if(
        $hover-bg,
        $hover-bg,
        color.adjust($bg-color, $lightness: -10%)
    );

    &:hover:not(:disabled) {
        background-color: $hover-color;
        transform: translateY(-1px);
    }

    &:active {
        transform: translateY(0);
    }
}

// Button sizes
@mixin btn-size($size) {
    @if $size == sm {
        padding: $btn-padding-sm;
        font-size: $font-sm;
    } @else if $size == lg {
        padding: $btn-padding-lg;
        font-size: $font-lg;
    } @else {
        padding: $btn-padding-base;
        font-size: $font-base;
    }
}

// Card component
@mixin card(
    $padding: $card-padding,
    $shadow: $shadow-md,
    $radius: $card-radius
) {
    background: $white;
    border-radius: $radius;
    padding: $padding;
    box-shadow: $shadow;
    transition: $transition-transform;

    &:hover {
        transform: translateY(-4px);
        box-shadow: $shadow-lg;
    }
}

// Card with theme colors (use with @each loops!)
@mixin card-theme($theme-colors) {
    @include card;

    $primary: map.get($theme-colors, primary);
    $secondary: map.get($theme-colors, secondary);

    border-top: 4px solid $primary;
    position: relative;

    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 2px;
        background: linear-gradient(90deg, $primary, $secondary);
        border-radius: $card-radius $card-radius 0 0;
    }
}

// ==========================================
// FORM MIXINS
// ==========================================

@mixin form-input {
    width: 100%;
    padding: $input-padding;
    border: $input-border;
    border-radius: $input-radius;
    font-size: $font-base;
    transition: $transition-colors;

    &:focus {
        outline: none;
        border-color: $primary;
        box-shadow: 0 0 0 3px rgba($primary, 0.1);
    }

    &::placeholder {
        color: $gray-500;
    }
}

@mixin form-group($gap: $spacing-4) {
    display: flex;
    gap: $gap;
    align-items: center;

    @media (max-width: $screen-sm) {
        flex-direction: column;
        align-items: stretch;
    }
}

// ==========================================
// TYPOGRAPHY MIXINS
// ==========================================

@mixin heading($level: 1) {
    font-family: $font-heading;
    font-weight: $font-bold;
    line-height: $leading-tight;
    color: $dark;

    @if $level == 1 {
        font-size: $font-3xl;
        @include md {
            font-size: $font-5xl;
        }
        @include lg {
            font-size: $font-6xl;
        }
    } @else if $level == 2 {
        font-size: $font-2xl;
        @include md {
            font-size: $font-3xl;
        }
        @include lg {
            font-size: $font-4xl;
        }
    } @else if $level == 3 {
        font-size: $font-xl;
        @include md {
            font-size: $font-2xl;
        }
    } @else {
        font-size: $font-lg;
        @include md {
            font-size: $font-xl;
        }
    }
}

@mixin body-text($size: base) {
    font-family: $font-primary;
    line-height: $leading-normal;
    color: $gray-700;

    @if $size == sm {
        font-size: $font-sm;
    } @else if $size == lg {
        font-size: $font-lg;
    } @else {
        font-size: $font-base;
    }
}

// ==========================================
// ANIMATION MIXINS
// ==========================================

@mixin fade-in($duration: $transition-base) {
    opacity: 0;
    animation: fadeIn $duration ease forwards;
}

@mixin slide-in-up($duration: $transition-base) {
    transform: translateY(30px);
    opacity: 0;
    animation: slideInUp $duration ease forwards;
}

@mixin float-animation($duration: 3s) {
    animation: floating $duration ease-in-out infinite;
}

// Keyframes (define once, use everywhere)
@keyframes fadeIn {
    to {
        opacity: 1;
    }
}

@keyframes slideInUp {
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes floating {
    0%,
    100% {
        transform: translateY(0px);
    }
    50% {
        transform: translateY(-20px);
    }
}

// ==========================================
// UTILITY MIXINS
// ==========================================

// Visually hide content (for accessibility)
@mixin visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

// Truncate text with ellipsis
@mixin text-truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// Aspect ratio boxes
@mixin aspect-ratio($width, $height) {
    position: relative;

    &::before {
        content: "";
        display: block;
        padding-top: math.percentage(math.div($height, $width));
    }

    > * {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
}

// Center absolutely positioned element
@mixin absolute-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// ==========================================
// CANDY EXPO SPECIFIC MIXINS
// ==========================================

// Exhibit card styling
@mixin exhibit-card($category) {
    @include card;

    $color: map.get($exhibit-categories, $category);

    &::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 4px;
        height: 100%;
        background: $color;
        border-radius: $card-radius 0 0 $card-radius;
    }

    .exhibit-image {
        font-size: $font-5xl;
        text-align: center;
        margin-bottom: $spacing-4;
        filter: drop-shadow(0 4px 8px rgba($color, 0.3));
    }
}

// Vendor badge styling
@mixin vendor-badge($type) {
    position: absolute;
    top: $spacing-3;
    right: $spacing-3;
    padding: $spacing-1 $spacing-2;
    border-radius: $rounded-full;
    font-size: $font-xs;
    font-weight: $font-semibold;
    text-transform: uppercase;

    @if $type == premium {
        background: linear-gradient(135deg, #ffd700, #ffed4e);
        color: #8b7500;
    } @else if $type == featured {
        background: linear-gradient(
            135deg,
            $primary,
            color.adjust($primary, $lightness: 10%)
        );
        color: $white;
    } @else if $type == new {
        background: linear-gradient(135deg, #10b981, #34d399);
        color: $white;
    } @else if $type == popular {
        background: linear-gradient(135deg, #f59e0b, #fbbf24);
        color: $white;
    }
}

/*
üí° MIXIN USAGE TIPS:

1. Keep mixins focused:
   ‚úÖ One responsibility per mixin
   ‚ùå Giant mixins that do everything

2. Use parameters for flexibility:
   ‚úÖ @mixin btn-variant($bg, $text, $hover)
   ‚ùå Separate mixins for every color

3. Provide sensible defaults:
   ‚úÖ @mixin card($padding: $card-padding)
   ‚ùå Always requiring all parameters

4. Use @content for flexible mixins:
   ‚úÖ Responsive mixins that accept any CSS
   ‚ùå Fixed mixins that can't be customized

5. Document complex mixins:
   Include usage examples in comments!
*/
